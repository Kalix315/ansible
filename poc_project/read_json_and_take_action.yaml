---
- name: Read JSON file and take action
  hosts: linux
  gather_facts: no
  become: yes
  tasks:
    - name: Read JSON file from remote host
      ansible.builtin.fetch:
        src: /tmp/file_json.json
        dest: /tmp/{{ inventory_hostname }}-file_json.json
        flat: yes

    - name: Load Variables into register
      ansible.builtin.include_vars:
        file: /tmp/{{ inventory_hostname }}-file_json.json
      register: file_json
      delegate_to: localhost

    - name: Output file JSON
      debug:
        var: file_json

    - name: Extract IP from JSON
      debug:
        var: file_json.ansible_facts.router.ip 
      register: ip 
      when: file_json.ansible_facts.router.ip is defined

    - name: Execute PING on IP extracted
      ansible.builtin.shell:
        cmd: 'ping -c 4 "{{ file_json.ansible_facts.router.ip }}"'
      ignore_errors: true
      register: ping_out

    - name: Output ping if successful
      debug:
        var: ping_out.stdout_lines
      when: ping_out.rc == 0

    - name: Check if ping was successful
      set_fact:
        ip_reachable: "{{ ping_out.rc == 0 }}"

    - name: Output result ip list
      debug:
        msg: "IP {{ file_json.ansible_facts.router.ip }} is {{ 'reachable' if ip_reachable else 'unreachable' }}"
      register: ip_list_out

    - name: Ottieni il timestamp corrente
      ansible.builtin.command:
        cmd: date +"%d-%m-%y-%H:%M:%S"
      register: timestamp_output

    - name: Write ip reachable on file
      ansible.builtin.lineinfile:
        path: /tmp/ip/{{ timestamp_output.stdout }}_ip_list_reachable
        line: "{{ ip_list_out.msg }}"
        state: present
        create: true
        insertafter: EOF
        backup: yes
        unsafe_writes: true
      delegate_to: localhost








